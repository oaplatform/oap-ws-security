{
services {
    organization-storage {
        implementation = oap.ws.security.server.OrganizationStorage
        parameters {
            path = /var/lib/oap-security/organizations
        }
        supervision.supervise = true
    }
    auth-service {
        implementation = oap.ws.security.server.AuthService
        parameters {
            expirationTime = 60
            salt = "oap-security"
        }
        supervision.supervise = true
    }
    token-service-impl {
        implementation = oap.ws.security.server.TokenServiceImpl
        parameters {
            authService = "@service:auth-service"
        }
        supervision.supervise = true
        dependsOn = [auth-service]
    }
    ws-organization {
       implementation = oap.security.OrganizationWS
       parameters {
            organizationStorage = "@service:organization-storage"
       }
       dependsOn = [organization-storage]
    }
    ws-login {
       implementation = oap.ws.security.server.LoginWS
       parameters {
            organizationStorage = "@service:organization-storage"
            authService = "@service:auth-service"
            cookieDomain = ""
            cookieExpiration = 60
       }
       dependsOn = [organization-storage,auth-service]
    }
    ws-auth {
       implementation = oap.ws.security.server.AuthWS
       parameters {
         authService = "@service:auth-service"
       }
       dependsOn = [auth-service]
    }
  }
}