{
  name = oap-ws-security-server
  dependsOn = [oap-ws]
  services {
    organization-storage {
      implementation = oap.ws.security.server.OrganizationStorage
      parameters {
        path = /var/lib/oap-security/organizations
      }
      supervision.supervise = true
    }
    user-storage {
      implementation = oap.ws.security.server.UserStorage
      parameters {
        path = /var/lib/oap-security/users
      }
      supervision.supervise = true
    }
    password-hasher {
      implementation = oap.ws.security.PasswordHasher
      parameters {
        salt = "oap-security"
      }
    }
    auth-service {
      implementation = oap.ws.security.AuthService
      parameters {
        userStorage = "@service:user-storage"
        passwordHasher = "@service:password-hasher"
        expirationTime = 60
      }
      supervision.supervise = true
      dependsOn = [
        user-storage
        password-hasher
      ]
    }
    ws-token {
      implementation = oap.ws.security.DefaultTokenService
      parameters {
        authService = "@service:auth-service"
      }
      dependsOn = [auth-service]
    }
    ws-organization {
      implementation = oap.ws.security.server.OrganizationWS
      parameters {
        organizationStorage = "@service:organization-storage"
        userStorage = "@service:user-storage"
        passwordHasher = "@service:password-hasher"
      }
      supervision.supervise = true
      dependsOn = [
        organization-storage
        user-storage
        password-hasher
      ]
    }
    ws-login {
      implementation = oap.ws.security.LoginWS
      parameters {
        authService = "@service:auth-service"
        cookieDomain = ""
        cookieExpiration = 60
      }
      supervision.supervise = true
      dependsOn = [auth-service]
    }
    ws-logout {
      implementation = oap.ws.security.LogoutWS
      parameters {
        authService = "@service:auth-service"
      }
      supervision.supervise = true
      dependsOn = [auth-service]
    }
    ws-auth {
      implementation = oap.ws.security.AuthWS
      parameters {
        authService = "@service:auth-service"
      }
      supervision.supervise = true
      dependsOn = [auth-service]
    }
  }
}
